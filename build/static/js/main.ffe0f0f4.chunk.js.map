{"version":3,"sources":["components/ChipTypePokemon/index.tsx","components/CardPokemon/index.tsx","store/types/index.ts","store/pokemon/pokemonReducer.ts","store/pokemon/pokemonContext.tsx","components/Utils/Loading/index.tsx","components/PokemonDetail/index.tsx","components/Utils/Modal/index.tsx","components/Utils/Select/index.tsx","pages/home/index.tsx","hooks/useKeypress.tsx","routers/AppRouter.tsx","Pokedex.tsx","reportWebVitals.ts","index.tsx"],"names":["ChipTypePokemon","type","className","name","CardPokemon","data","handlePokemonCardEvent","useState","undefined","pokemon","setPokemon","useEffect","getPokemonInfo","word","a","axios","get","url","res","onClick","id","charAt","toUpperCase","slice","types","map","element","src","alt","reducer","state","action","payload","loading","PokemonContext","React","createContext","getPokemonDetail","setPokemonId","PokemonProvider","children","useReducer","PokemonReducer","dispatch","console","log","Provider","value","Loading","PokemonDetail","useContext","description","setDescription","getPokemon","getPokemonCharacteristic","descriptions","abilities","o","ability","height","weight","base_experience","Modal","show","showFooter","showHeader","handleCloseModal","ContentComponent","ref","useRef","checkIfClickedOutside","e","current","contains","target","document","addEventListener","removeEventListener","style","display","Select","options","handleChange","currentValue","onChange","option","Home","setLoading","pokemons","setPokemons","showModal","setShowModal","setTypes","currentType","setCurrentType","currentId","getPokemonTypes","getPokemons","key","results","onKeyup","window","index","AppRouter","exact","path","Pokedex","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ffe0f0f4.chunk.js","sourcesContent":["import React from 'react'\r\nimport './index.scss'\r\n\r\ninterface IProps {\r\n    type: {\r\n        name: string\r\n    }\r\n}\r\n\r\n\r\nconst ChipTypePokemon:React.FC<IProps> = ({ type }) => {\r\n    return (\r\n        <span className={`pokemon-type pokemon-type--${type.name}`}>\r\n            {type.name}\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default ChipTypePokemon\r\n","import axios from 'axios'\r\nimport React, { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport ChipTypePokemon from '../ChipTypePokemon'\r\nimport './index.scss'\r\n\r\ninterface IProps {\r\n    data: {\r\n        name: string\r\n        url: string\r\n    },\r\n    handlePokemonCardEvent?: (e: any) => void\r\n}\r\n\r\ninterface IPokemon {\r\n    id: string\r\n    name: string\r\n    types: []\r\n}\r\n\r\nconst CardPokemon: React.FC<IProps> = ({\r\n    data,\r\n    handlePokemonCardEvent = () => { }\r\n}) => {\r\n\r\n    const [pokemon, setPokemon] = useState<IPokemon | undefined>(undefined)\r\n\r\n    useEffect(() => {\r\n        getPokemonInfo()\r\n    }, []);\r\n\r\n    const getPokemonInfo = async () => {\r\n        const res = await axios.get(data.url)\r\n        setPokemon(res.data)\r\n    }\r\n\r\n    const capitalizeFirstLetter = (word: string) => {\r\n        return word.charAt(0).toUpperCase() + word.slice(1);\r\n    }\r\n\r\n    return (\r\n        <div className=\"pokemon-card\" onClick={() => handlePokemonCardEvent(pokemon?.id)}>\r\n            <div className=\"pokemon-card__data\">\r\n                <h2 className=\"pokemon-card__name\">{capitalizeFirstLetter(pokemon?.name || '')}</h2>\r\n                <div className=\"pokemon-card__types\">\r\n                    {\r\n                        pokemon?.types.map((element: any) => (\r\n                            <ChipTypePokemon type={element.type} key={`${pokemon.name}-${element.type.name}`} />\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n            <img className=\"pokemon-card__image\" src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${pokemon?.id}.png`} alt=\"Pokemon\" />\r\n            <span className=\"pokemon-card__number\">#{pokemon?.id}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardPokemon\r\n","export const types = {\r\n    GET_POKEMON_DETAIL: '[Pokemon] GetPokemonDetail',\r\n    SET_POKEMON_ID: '[Pokemon] PokemonId',\r\n    END_LOADING: '[Pokemon] EndLoading'\r\n  }\r\n  ","import { types } from '../types'\r\nimport * as React from 'react'\r\n\r\nconst reducer: React.Reducer<any, any> = (state, action) => {\r\n    switch (action.type) {\r\n        case types.GET_POKEMON_DETAIL:\r\n            return {\r\n                ...state,\r\n                pokemon: action.payload,\r\n                loading: false\r\n            }\r\n        case types.SET_POKEMON_ID:\r\n            return {\r\n                ...state,\r\n                id: action.payload.id,\r\n                loading: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer\r\n","import React, { useReducer } from 'react'\r\nimport PokemonReducer from './pokemonReducer'\r\nimport { types } from '../types'\r\nimport axios from 'axios'\r\n\r\ninterface Props {\r\n    children: React.ReactNode\r\n}\r\n\r\ninterface IPokemon {\r\n    pokemon: any\r\n    id: number,\r\n    getPokemonDetail: (id: number) => void,\r\n    setPokemonId: (id: number) => void,\r\n    loading: Boolean\r\n}\r\n\r\nexport const PokemonContext = React.createContext<IPokemon>({\r\n    pokemon: null,\r\n    id: 0,\r\n    getPokemonDetail: () => { },\r\n    setPokemonId: () => { },\r\n    loading: false\r\n})\r\n\r\nconst PokemonProvider = ({ children }: Props): any => {\r\n\r\n    const [state, dispatch] = useReducer(PokemonReducer, PokemonContext)\r\n\r\n    const getPokemonDetail = async (id: number) => {\r\n        try {\r\n            if (id > 0) {\r\n                const res = await axios.get(`https://pokeapi.co/api/v2/pokemon/${id}`);\r\n                dispatch({\r\n                    type: types.GET_POKEMON_DETAIL,\r\n                    payload: res.data\r\n                })\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const setPokemonId = (id: number) => {\r\n        dispatch({\r\n            type: types.SET_POKEMON_ID,\r\n            payload: {\r\n                id\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <PokemonContext.Provider\r\n            value={{\r\n                pokemon: state.pokemon,\r\n                id: state.id,\r\n                loading: state.loading,\r\n                getPokemonDetail,\r\n                setPokemonId\r\n            }}\r\n        >\r\n            {children}\r\n        </PokemonContext.Provider>\r\n    )\r\n}\r\n\r\nexport default PokemonProvider\r\n","import React from 'react'\r\nimport './index.css'\r\n\r\nconst Loading: React.FC = () => {\r\n    return (\r\n        <div className=\"center-on-page\">\r\n            <div className=\"pokeball\">\r\n                <div className=\"pokeball__button\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n","import axios from 'axios'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { PokemonContext } from '../../store/pokemon/pokemonContext'\r\nimport ChipTypePokemon from '../ChipTypePokemon'\r\nimport Loading from '../Utils/Loading'\r\nimport './index.scss'\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\nconst PokemonDetail: React.FC<IProps> = ({\r\n\r\n}) => {\r\n\r\n    const { id, loading, getPokemonDetail, pokemon } = useContext(PokemonContext)\r\n    const [description, setDescription] = useState('');\r\n\r\n    useEffect(() => {\r\n        getPokemon()\r\n        getPokemonCharacteristic()\r\n    }, [id])\r\n\r\n    const getPokemon = async () => {\r\n        getPokemonDetail(id)\r\n    }\r\n\r\n    const getPokemonCharacteristic = async () => {\r\n        try {\r\n            const res = await axios.get(`https://pokeapi.co/api/v2/characteristic/${id}`)\r\n            setDescription(res.data.descriptions[1].description);\r\n        } catch (error) {   \r\n            setDescription('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                loading ? <Loading />\r\n                    : (\r\n                        pokemon && (<div className=\"pokemon-detail\">\r\n                            <img className=\"pokemon-detail__image\" src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${pokemon.id}.png`} alt=\"\" />\r\n                            <div className=\"pokemon-detail__content\">\r\n                                <h2 className=\"pokemon-detail__name\"><span>#{pokemon.id}</span> {pokemon.name}</h2>\r\n                                <p className=\"pokemon-detail__desc\">{description}</p>\r\n                                <div className=\"pokemon-detail__types\">\r\n                                    {\r\n                                        pokemon?.types.map((element: any) => (\r\n                                            <ChipTypePokemon type={element.type} key={`${pokemon.name}-${element.type.name}`} />\r\n                                        ))\r\n                                    }\r\n                                </div>\r\n                                <h3 className=\"pokemon-detail__subtitle\">ABILITIES</h3>\r\n                                <div className=\"pokemon-detail__abilities\">\r\n                                    {\r\n                                        pokemon?.abilities.map((o: any) => (\r\n                                            <p className=\"pokemon-detail__chips pokemon-detail__chips--border\">{o.ability.name}</p>\r\n                                        ))\r\n                                    }\r\n                                </div>\r\n                                <div className=\"pokemon-detail__properties\">\r\n                                    <div className=\"content\">\r\n                                        <h3>HEIGHT</h3>\r\n                                        <p className=\"pokemon-detail__chips\">{pokemon.height}m</p>\r\n                                    </div>\r\n                                    <div className=\"content\">\r\n                                        <h3>WIGHT</h3>\r\n                                        <p className=\"pokemon-detail__chips\">{pokemon.weight}Kg</p>\r\n                                    </div>\r\n                                    <div className=\"content\">\r\n                                        <h3>BASE EXP</h3>\r\n                                        <p className=\"pokemon-detail__chips\">{pokemon.base_experience}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>)\r\n                    )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PokemonDetail\r\n","import React, { useContext, useEffect, useRef } from 'react'\r\nimport { PokemonContext } from '../../../store/pokemon/pokemonContext'\r\nimport './index.scss'\r\n\r\ninterface IProps {\r\n    show?: boolean,\r\n    showFooter?: boolean,\r\n    showHeader?: boolean,\r\n    handleCloseModal?: (e?: any) => void,\r\n    ContentComponent: React.FC\r\n}\r\n\r\nconst Modal: React.FC<IProps> = ({\r\n    show = false,\r\n    showFooter = false,\r\n    showHeader = false,\r\n    handleCloseModal = () => { },\r\n    ContentComponent\r\n}) => {\r\n\r\n    const ref = React.useRef() as React.LegacyRef<HTMLDivElement>;\r\n\r\n    useEffect(() => {\r\n        const checkIfClickedOutside = (e: any) => {\r\n            // @ts-ignore\r\n            if (ref.current && !ref.current.contains(e.target)) {\r\n                handleCloseModal();\r\n            }\r\n        }\r\n        document.addEventListener(\"mousedown\", checkIfClickedOutside)\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", checkIfClickedOutside)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"modal\" style={{ display: show ? \"block\" : \"none\" }}>\r\n            <div className=\"modal__content\" ref={ref}>\r\n                <div className=\"modal__header\">\r\n                    <span className=\"close\" onClick={handleCloseModal}>&times;</span>\r\n                    {showHeader && (<h2 className=\"title\"></h2>)}\r\n                </div>\r\n                <div className=\"modal__body\">\r\n                    <ContentComponent />\r\n                </div>\r\n                {\r\n                    showFooter && (<div className=\"modal__footer\">\r\n                        {/* TO DO FOOTER */}\r\n                    </div>)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal\r\n","import React from 'react'\r\nimport './index.scss'\r\n\r\ninterface IOption {\r\n    name: string\r\n}\r\n\r\ninterface IProps {\r\n    options?: IOption[]\r\n    handleChange?: (e: any) => void\r\n    currentValue: string\r\n}\r\n\r\nconst Select: React.FC<IProps> = ({\r\n    options,\r\n    handleChange,\r\n    currentValue\r\n}) => {\r\n    return (\r\n        <select className=\"select\" onChange={handleChange} value={currentValue}>\r\n            {\r\n                options?.map((option) => (\r\n                    <option value={option.name} key={option.name}>{option.name}</option>\r\n                ))\r\n            }\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default Select\r\n","import axios from 'axios'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport CardPokemon from '../../components/CardPokemon'\r\nimport PokemonDetail from '../../components/PokemonDetail'\r\nimport Loading from '../../components/Utils/Loading'\r\nimport Modal from '../../components/Utils/Modal'\r\nimport Select from '../../components/Utils/Select'\r\nimport useKeypress from '../../hooks/useKeypress'\r\nimport { PokemonContext } from '../../store/pokemon/pokemonContext'\r\nimport './index.scss'\r\n\r\nconst Home: React.FC = () => {\r\n\r\n    const [loading, setLoading] = useState(true)\r\n    const [pokemons, setPokemons] = useState([])\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [types, setTypes] = useState([]);\r\n    const [currentType, setCurrentType] = useState('normal');\r\n\r\n    const { id: currentId, setPokemonId } = useContext(PokemonContext)\r\n\r\n    useEffect(() => {\r\n        getPokemonTypes();\r\n    }, [currentType])\r\n\r\n    useEffect(() => {\r\n        getPokemons();\r\n    }, [currentType])\r\n\r\n    const getPokemons = async () => {\r\n        setLoading(true);\r\n        const res = await axios.get(`https://pokeapi.co/api/v2/type/${currentType}`);\r\n        setPokemons(res.data.pokemon);\r\n        setLoading(false);\r\n    }\r\n\r\n    const getPokemonTypes = async () => {\r\n        const res = await axios.get('https://pokeapi.co/api/v2/type');\r\n        setTypes(res.data.results);\r\n    }\r\n\r\n    const handleChangeType = (e: any) => {\r\n        setCurrentType(e.target.value)\r\n    }\r\n\r\n    const handlePokemonCardEvent = (id: number) => {\r\n        if (id !== currentId) {\r\n            setPokemonId(id)\r\n        }\r\n        setShowModal(true);\r\n    }\r\n\r\n    const handleCloseModal = () => {\r\n        setShowModal(false);\r\n    }\r\n\r\n    useKeypress('Escape', () => {\r\n        setShowModal(false);\r\n    });\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Select options={types.slice(1, 18)} handleChange={handleChangeType} currentValue={currentType} />\r\n            <div className=\"pokemon-list\">\r\n                {\r\n                    loading && <Loading />\r\n                }\r\n                {\r\n                    !loading && (pokemons.map((element: any, index) => (\r\n                        <CardPokemon data={element.pokemon} key={element.pokemon.name} handlePokemonCardEvent={handlePokemonCardEvent} />\r\n                    )))\r\n                }\r\n            </div>\r\n            <Modal show={showModal} handleCloseModal={handleCloseModal} ContentComponent={PokemonDetail} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import { useEffect } from 'react';\r\n/**\r\n * useKeyPress\r\n * @param {string} key - the name of the key to respond to, compared against event.key\r\n * @param {function} action - the action to perform on key press\r\n */\r\nexport default function useKeypress(key: string, action: () => void) {\r\n    useEffect(() => {\r\n        function onKeyup(e: any) {\r\n            if (e.key === key) action()\r\n        }\r\n        window.addEventListener('keyup', onKeyup);\r\n        return () => window.removeEventListener('keyup', onKeyup);\r\n        // eslint-disable-next-line\r\n    }, []);\r\n}","import {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect,\r\n    Route\r\n} from 'react-router-dom'\r\nimport Home from '../pages/home'\r\n\r\nconst AppRouter = (): any => {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path=\"/\"><Home/></Route>\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter","import React from 'react'\nimport AppRouter from './routers/AppRouter'\nimport './assets/scss/index.scss'\nimport PokemonProvider from './store/pokemon/pokemonContext';\n\nconst Pokedex: React.FC = () => {\n  return (\n    <PokemonProvider>\n      <AppRouter />\n    </PokemonProvider>\n  );\n}\nexport default Pokedex;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Pokedex from './Pokedex'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Pokedex />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}